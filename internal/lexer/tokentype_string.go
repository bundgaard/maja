// Code generated by "stringer -type TokenType"; DO NOT EDIT.

package lexer

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[TokenEOF-0]
	_ = x[TokenILLEGAL-1]
	_ = x[TokenAtom-2]
	_ = x[TokenBoolean-3]
	_ = x[TokenNumber-4]
	_ = x[TokenIdentifier-5]
	_ = x[TokenOpenParen-6]
	_ = x[TokenCloseParen-7]
	_ = x[TokenDot-8]
	_ = x[TokenChar-9]
	_ = x[TokenQuote-10]
	_ = x[TokenNewline-11]
}

const _TokenType_name = "TokenEOFTokenILLEGALTokenAtomTokenBooleanTokenNumberTokenIdentifierTokenOpenParenTokenCloseParenTokenDotTokenCharTokenQuoteTokenNewline"

var _TokenType_index = [...]uint8{0, 8, 20, 29, 41, 52, 67, 81, 96, 104, 113, 123, 135}

func (i TokenType) String() string {
	if i >= TokenType(len(_TokenType_index)-1) {
		return "TokenType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _TokenType_name[_TokenType_index[i]:_TokenType_index[i+1]]
}
